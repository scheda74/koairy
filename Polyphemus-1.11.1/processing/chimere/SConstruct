import os, sys

# Path to Polyphemus.
polyphemus_path = os.path.abspath("../../")
# For NetCDF compiled with g95.
# library_path = "/net/opt/netcdf-.../lib"
# Lam-mpi include path.
# lam_include_path = "/usr/include/lam"

# Path to Verdandi.
verdandi_path = os.path.join(polyphemus_path, "include/verdandi/")

# If SConstruct called with existing environment variables, use them.
if os.environ.has_key("polyphemus_path"):
    polyphemus_path = os.environ["polyphemus_path"]
if os.environ.has_key("verdandi_path"):
    verdandi_path = os.environ["verdandi_path"]

if not os.path.isdir(verdandi_path):
    print "[ERROR] In \"processing/chimere\":"
    print "    Verdandi not found at \"" + verdandi_path + "\"."
    print "    Please install Verdandi to use the Chimere processing."
    Return()

# If G95 requires additional libraries:
# os.environ["LIBRARY_PATH"] = "/.../usr/lib/gcc-lib/...:" \
#     + os.environ["LIBRARY_PATH"]

execfile(os.path.join(polyphemus_path,
                      "include/models/chimere/SConstruct"))
